Примеры качественного ПО:
Продукт, который обладает высоким потребительским качеством, независимо от области применения. Для пользователя он должен удовлетворять определенному уровню его потребностей.

ПО, которое отвечает нефункциональным требованиям. Таким как удобство в эксплуатации, надежность, производительность, защищенность, удобство, сопровождение.

Примеры некачественного ПО:
Приложение, которое выполняет требуемые функции, но имеет проблемы с внесением изменений или пониманием созданного кода. В этом случае такое ПО нельзя назвать качественным, так как на этапе его сопровождения могут возникнуть проблемы с его модификацией при изменении пользовательских требований.

Продукт, разработанный без использования каких-либо стандартов. Сегодня продается много программ, мобильных приложений и даже корпоративных систем, которые были созданы без них. Игнорирование стандартов может привести к снижению качества ПО и уменьшению спроса на конечный продукт.

Определение качества ПО:
Качество ПО - это способность программы удовлетворять требованиям пользователя, при этом быть надежной, функциональной, безопасной и эффективной.

Качество определяется в стандарте ISO 9126 как вся совокупность его характеристик, относящихся к возможности удовлетворять высказанные или подразумеваемые потребности всех заинтересованных лиц.


Аспекты качества, их взаимное влияние
Три аспекта качества ПО:
- Внутреннее качество связано с характеристиками ПО самого по себе, без учета его поведения;
- Внешнее качество характеризующего ПО с точки зрения его поведения;
- Качество ПО при использовании - это то качество, которое ощущается пользователями при конкретных сценариях работы ПО.


Выделим шесть характеристик качества:
1. Функциональность: как хорошо ПО выполняет задачи, для которых оно создано.
Пример: бухгалтерское ПО должно корректно считать налоги и обеспечить интеграцию с другими системами.

2. Надежность: способность ПО работать без сбоев в течении длительного времени.
Пример: отказоустойчивость интернет-магазина при пиковых нагрузках.

3. Удобство использования: легкость освоения и использования ПО для пользователя.
Пример: простота интерфейса в мобильных приложениях.

4. Эффективность: насколько оптимально ПО использует ресурсы.
Пример: быстрота работы и экономия оперативной памяти.

5. Сопровождаемость: несколько легко вносить изменения в код, исправлять ошибки или добавлять новые функции.
Пример: хорошо документированные код и структурированные комментарии.

6: Переносимость: способность ПО работать в разных средах.
Пример: приложение, работающее на Windows, macOS, Linux.


Как стандарты помогают разработчикам
Стандарты описывают общие требования, методы и процессы, которые нужно соблюдать при разработке ПО. Благодаря этому разработчики могут:
- улучшить совместимость программных систем между собой
- обеспечить надежность и безопасность ПО
- оптимизировать затраты на разработку и обслуживание ПО

Пример: В медицине ПО должно соответствовать строгим стандартам безопасности и надежности, поскольку ошибка в работе ПО может иметь серьезные последствия для пациента. Стандарты помогают свести такие риски к минимуму.

Итоги:
Подводя итог, стандарты играют ключевую роль в обеспечении качества и надежности ПО. Они:
- Помогают структурировать процессы разработки.
- Гарантируют высокое качество конечного продукта.
- Позволяют избежать ошибок и повышают предсказуемость.

Таким образом, использование стандартов в разработке ПО не только упрощает процесс создания программных систем, но и обеспечивает их надежностью, безопасностью и соответствие ожиданиям пользователей.




ОБЪЕКТЫ УЯЗВИМОСТИ
Объект уязвимости - это элемент, ресурс, система или процесс, который имеет потенциальные уязвимости, делая его подверженным различным видам угроз и атак. В более простых словах, это то, что может быть атаковано, скомпрометировано, или нарушено, представляя риск для безопасности или нормального функционирования организации или системы.

Роль понимания объектов уязвимости:
Пониманию объектов уязвимости имеет ключевое значение в обеспечении безопасности, поскольку оно помогает:
- Идентифицировать источники потенциальных угроз и атак.
- Оценить риски, связанные с различными объектами.
- Разрабатывать стратегии и мероприятия по защите от угроз.
- Планировать ресурсы и управлять безопасностью более эффективно.

Понимание объектов уязвимости позволяет организациям и индивидуальным пользователям лучше защищаться от потенциальных угроз и атак. Без этого понимания, становится трудно разрабатывать и реализовывать эффективные меры по обеспечению безопасности.

Примеры объектов уязвимости:
Информационная безопасность.
Пример: Веб-сервер с устаревшим ПО, содержащий уязвимости, которые могут быть использованы злоумышленниками для взлома сервера.
Здесь объектами уязвимости могут быть программные приложения, операционные системы, сетевое оборудование, базы данных и другие информационные ресурсы, подверженные угрозам в виде вирусов, хакерских атак, фишинга и др.

Физическая безопасность
Пример: несанкционированный доступ к серверной комнате из-за слабой системы контроля доступа.
Объектами уязвимости могут быть физические объекты, такие как двери, окна, системы видеонаблюдения и пропускной системы, которые могут быть подвержены несанкционированному доступу или взлому.

Организационные уязвимости
Пример отсутствие стратегии управления рисками в организации, что делает ее более уязвимой к финансовым мошенничествам.
В данном случае, объектами уязвимости могут быть недостаточные политики безопасности, слабая культура безопасности, недостаточное обучение сотрудников или отсутствие стратегии управления рисками, что может увеличить риск финансовых потерь или утечек данных.

Почему объекты уязвимости важны:
Точки входа для угроз и атак
Объекты уязвимости могут служить точками входа, через которые злоумышленники могут попытаться атаковать систему или организацию. Понимание этих точек позволяет предпринимать меры для их защиты.

Потенциальные последствия
Успешные атаки на объекты уязвимости могут привести к различным последствиям, включая утечку конфиденциальности данных, нарушение целостности системы и угрозы доступности. Эти последствия могут быть катастрофическими.


Оценка рисков
Понимание объектов уязвимости позволяет проводить анализ рисков, оценивать вероятность возникновения угроз и потенциальные ущербы. что помогает разрабатывать меры по минимизации рисков.

Соблюдение нормативных требований
Во многих отраслях существуют нормативные требования, касающиеся обеспечения безопасности, и знание объектов уязвимости помогает соответствовать этим требованиям.

Пример 1: Утечка данных FaceBook (2018)
Пример 2: Вирус Stuxnet (2010)


Сканирование уязвимостей - это процесс автоматического поиска и идентификации уязвимостей в информационных системах, программном обеспечении и сетях. Он осуществляется с помощью специальных инструментов и программ.

Как происходит сканирование уязвимостей:
- сканирование портов и сервисов: Инструменты сканирования анализируют открытые порты и службы на целевой системе, чтобы выявить потенциальные уязвимости.
- поиск известных уязвимостей: сравнение версий программного обеспечения и операционных систем с базами данных уязвимостей.
- анализ ответов на запросы: инструменты могут отправлять запросы и анализировать ответы, чтобы выявить неожиданные или аномальные поведения.

Пентестинг - представляет собой контролируемую атаку на систему или сеть с целью выявления уязвимостей. Он проводится специалистами по безопасности, называемым "пентестерами".

Цель пентестинга:
Главной целью пентестинга является проверка безопасности системы или сети путем моделирования атаки. Это позволяет выявить уязвимости, которые могли бы использоваться злоумышленниками.


Пентестинг включает:
Сбор информации: Пентестер собирает информацию о целевой системе, ее компонентах и сетевой инфраструктуре.
Анализ уязвимостей: Пентестер исследует систему на предмет уязвимостей, которые могут быть атакованы.
Эксплуатация уязвимостей: Если уязвимость обнаружена, пентестер пытается ее эксплуатировать, чтобы продемонстрировать, как она может быть использована злоумышленниками.
Составление отчета: В конце процесса пентестер составляет отчет, в котором описываются результаты и рекомендации по устранению уязвимостей.





Мониторинг безопасности - это процесс непрерывного отслеживания активности в информационных системах и сетях с целью выявления аномалий и потенциальных инцидентов безопасности.
Мониторинг помогает выявлять необычную активность, которая может указывать на атаки или нарушение безопасности в реальном времени.

СОИ - это специализированные инструменты и системы, разработанные для автоматического обнаружения потенциальных инцидентов безопасности на основе анализа событий и данных.

Мониторинг и СОИ позволяют организациям:
- Быстро обнаруживать атаки и инциденты безопасности
- Предпринимать меры по реагированию на инциденты, минимизируя их последствия

Устранение уязвимостей (патчинг) - это процесс применения корректирующих мероприятий, таких как патчи и обновления, для устранения известных уязвимостей в операционных системах, приложениях и другом программном обеспечении.

Устранение уязвимостей позволяет закрыть потенциальные точки входа для атак.

Процесс устранения уязвимостей включает в себя следующие шаги:
- Идентификация уязвимостей в системе.
- Поиск соответствующих патчей или обновлений.
- Установка патчей и обновлений на соответствующие системы.
- Тестирование системы после установки, чтобы убедиться, что уязвимость было успешно устранена.

Принятие мер для уменьшения рисков - это процесс анализа и снижения потенциальных угроз и атак, с целью снижения вероятности и воздействия потенциальных инцидентов безопасности.

Принятие мер для уменьшения рисков включает в себя следующие шаги?
- Анализ рисков
- Разработка стратегий
- Внедрения мероприятий
- Мониторинг и адаптация

Защита от угроз и атак - процесс применения различных средств и методов для предотвращения, обнаружения и сдерживания попыток атак и нарушений безопасности информационных систем.

Средства защиты включает в себя:
- Брандмауэры и антивирусное ПО
- Системы обнаружения вторжений (IDS) и системы предотвращения вторжений (IPS)
- Аутентификация и авторизация
- Шифрование
- Системы мониторинга и журналирования

Обучение и осведомленность сотрудников - это процесс обучения персонала о правилах и процедурах безопасности информационных систем, а также повышение их осведомленности о потенциальных угрозах и атаках.

Обученные и осведомленные сотрудники могут:
- Идентифицировать и предотвращать попытки социальной инженерии и фишинговых атак.
- Соблюдать правила безопасности при работе с конфиденциальными данными
- Сообщать о необычной активности или подозрительных событиях

Обучение и осведомленность могут включать в себя следующие шаги:
- Определение и предотвращение социальной инженерии.
- Защита паролей и аккаунты.
- Правила работы с электронной почтой и вложениями.
- Работа с конфиденциальными данными и конфиденциальной информацией.